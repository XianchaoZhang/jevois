// ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// JeVois Smart Embedded Machine Vision Toolkit - Copyright (C) 2016 by Laurent Itti, the University of Southern
// California (USC), and iLab at USC. See http://iLab.usc.edu and http://jevois.org for information about this project.
//
// This file is part of the JeVois Smart Embedded Machine Vision Toolkit.  This program is free software; you can
// redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software
// Foundation, version 2.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
// License for more details.  You should have received a copy of the GNU General Public License along with this program;
// if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// Contact information: Laurent Itti - 3641 Watt Way, HNB-07A - Los Angeles, CA 90089-2520 - USA.
// Tel: +1 213 740 3527 - itti@pollux.usc.edu - http://iLab.usc.edu - http://jevois.org
// ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*! \file */

#pragma once

#include <jevois/Core/VideoOutput.H>
#include <jevois/Core/VideoBuf.H>

namespace jevois
{
  //! No-op VideoOutput derivative for when there is no video output
  //! 当没有视频输出时，无操作 VideoOutput 派生类 
  /*! 这个从 VideoOutput 派生的类几乎不执行任何操作，可以在不需要视频输出时由 Engine 使用它。\ingroup core */ 
  class VideoOutputNone : public VideoOutput
  {
    public:
      //! 用于安全继承的虚拟析构函数
      virtual ~VideoOutputNone();

      //! 设置视频格式和帧速率 
	  /*! 在 VideoOutputNone 中，这是一个无操作。 */
      void setFormat(VideoMapping const & m) override;

      //！获取预分配的图像，以便我们可以填充像素数据，然后使用 send() 发送出去 
	  /*！在 VideoOutputNone 中，这将返回一个空白缓冲区。 */ 

      void get(RawImage & img) override;
      
      //! Send an image out
      /*! In VideoOutputNone, this is a no-op. */
      void send(RawImage const & img) override;

      //! Start streaming
      /*! In VideoOutputNone, this is a no-op. */
      void streamOn() override;

      //! Abort streaming
      /*! In VideoOutputNone, this is a no-op. */
      void abortStream() override;
      
      //! Stop streaming
      /*! In VideoOutputNone, this is a no-op. */
      void streamOff() override;

    protected:
      std::shared_ptr<VideoBuf> itsBuffer;
      jevois::RawImage itsImage;
  };
}

