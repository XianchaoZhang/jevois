/*! \page JeVoisInventor JeVois-A33：JeVois Inventor 图形用户界面 
\tableofcontents

JeVois Inventor 是 JeVois-A33 智能相机的图形前端，可在主机（PC、Mac、Linux）上运行。它使用完整的 Python + OpenCV 轻松编写在 JeVois 上运行的新计算机视觉管道。

JeVois Inventor 不与 JeVois-Pro 一起使用。相反，JeVois-Pro 直接在相机中提供相同的功能。如果您正在使用 JeVois-Pro，则可以跳过此页面。

此前端是为不阅读用户手册的人创建的，因此请随意探索！

\youtube{XVMk8lRvm8k}

尽管如此，这里还是有几点建议。

\note JeVois Inventor 目前处于测试阶段。请通过电子邮件将评论和错误报告发送至 jevois.org@gmail.com 帮助我们改进此软件

安装 JeVois Inventor 
--------------------------

- Windows:
  + 在 Windows 7 和 Windows 10 上测试。
  + 从 http://jevois.org/start 下载 <b>jevois-inventor_XXX.zip</b>（XXX 会因版本而异）
  + Windows 7（不是 8 或 10）用户需要安装驱动程序，请参阅 http://jevois.org/doc/USBserialWindows.html
  + 解压缩 zip 内容
  + 双击 `jevois-inventor.exe`
  + 如果未检测到 JeVois 相机，请参阅下面的 "Troubleshooting"
- Linux:
  + 适用于 20.04（focal）、18.04 amd64（bionic）和（仅限旧版本）16.04 amd64（xenial）并经过测试
  + 从 http://jevois.org/start 下载 <b>jevois-inventor_XXX.deb</b>（XXX 会因版本而异）
  + `sudo dpkg -i jevois-inventor_XXX.deb` #（XXX 会根据版本而变化）
  + `sudo killall ModemManager` #（ModemManager 会干扰 JeVois）
  + `jevois-inventor`
  + 如果您希望避免每次连接 JeVois 时都必须更改其视频和串行端口的权限，则需要将您的用户添加到 \b video 和 \b dialout 组，如下所示：\verbatim sudo apt purge modemmanager sudo usermod -aG dialout $USER sudo usermod -aG video $USER \endverbatim 并重新启动计算机以使设置生效。


- MacOS:
  + 已在 Catalina、Mojave、High Sierra 上测试。无法在 Snow Leopard 上运行，因为版本太旧。抱歉，我们没有中间版本可供测试...
  + 从 http://jevois.org/start 下载 <b>jevois-inventor_XXX.dmg</b>（XXX 会因版本而异）
  + 双击 DMG 文件以将其打开
  + 将 jevois-inventor 拖到桌面或应用程序文件夹
  + 双击 jevois-inventor。如果您的 Mac 拒绝打开它，请按住 `CTRL` 并单击 JeVois Inventor 图标，然后从下拉菜单中选择 \b 打开。现在应该可以打开它了。

您的 JeVois 智能相机 
-----------------------

\jvimg{proto-legend.jpg, 60%}

另请参阅：
- \ref Hardware
- \ref Handling
- \ref UserConnect


检测您的 JeVois 智能相机 
----------------------------------

检测是全自动的。无需指定设备，无需查找端口。

只需启动 JeVois Inventor，将装有最新 JeVois 软件的 microSD 卡插入相机，然后将相机连接到主机。

一旦检测到摄像头，\jvmod{DemoSaliency} 机器视觉模块将自动启动。

\jvimg{jvinv0001.png, 70%}

您可以随时断开 JeVois，JeVois Inventor 应该会检测到。下次连接 JeVois 时，JeVois Inventor 也应该会再次检测到它。

Troubleshooting:

- Linux：您可能有权限问题。每次 JeVois 启动后（橙色 LED 常亮），请尝试“sudo chmod 777 /dev/video0 /dev/ttyACM0”。
- 有关如何使用普通视频捕获设备开始使用 JeVois 的更多详细说明：
+ \ref UserStartWindows
+ \ref UserStartLinux
+ \ref UserStartMac

尝试各种机器视觉模块 
-----------------------------------------

使用<b>视觉模块</b>菜单选择给定的机器视觉模块。

\jvimg{jvinv0002.png, 70%}

用 Python 编写的模块以粗体突出显示。您可以直接在 JeVois Inventor 中编辑这些模块的代码（见下文）。

在 \b Info 选项卡下，您可以浏览模块的文档。您可以按 `CTRL` + 鼠标滚轮来放大/缩小。

\note 目前，JeVois Inventor 仅支持 YUYV 捕获，我们认为这是 Qt（我们用于开发 JeVois Inventor 的小部件工具包）的 QCamera 类的限制。我们正在研究修复此问题，可能通过修复 Qt 的核心。

更多信息：现在可能是熟悉几个关键概念的好时机：\ref 概念

调整参数 
--------------------

许多机器视觉模块公开了可由用户调整的参数。

点击\b参数选项卡，查看当前模块的参数。

\jvimg{jvinv0004.png, 70%}

- 将鼠标悬停在参数的小部件上可以查看此参数功能的描述

- 将鼠标悬停在参数名称上可查看其完整的机器导向名称和数据类型

- 单击 \b 重置按钮可将参数重置为其默认值

- 切换<b>显示冻结参数</b>以显示在运行时无法更改的参数（这些参数通常只能在加载模块时通过配置文件设置一次）。

- 切换<b>显示系统参数</b>以显示与 JeVois 核心系统相关的参数，而不是当前的机器视觉模块。

通过命令行控制台与 JeVois 通信 
----------------------------------------------------------

JeVois 提供了一个简单的命令行界面，允许人们通过 JeVois 的 4 针串行端口或通过 Serial-over-USB 端口（JeVois Inventor 使用）运行命令、设置参数等。

该接口主要用来让微控制器或主机配置 JeVois。实际上，每次单击 JeVois Inventor 中的按钮时，都会使用此命令行接口向 JeVois 发送命令。

\jvimg{jvinv0005.png, 70%}

- 单击底部的输入行即可输入命令。命令输入行具有完整的历史记录，因此您可以使用向上/向下光标键重新输入先前输入的命令。

- 将鼠标悬停在 \b Enter 按钮旁边的“？”上，即可查看当前可用命令的列表。

- 在左上角，选择发送日志消息的位置（无处、发送到 USB、发送到 4 针串行端口或两者）。某些模块会发出日志消息，以便让您了解其运行的详细信息，或让您了解任何错误情况。

- 在右上角，选择将模块输出消息发送到何处（无处、发送到 USB、发送到 4 针串行端口或两者）。模块输出消息包含当前机器视觉管道在输入视频中发现的结果。例如，它可以流式传输已识别对象的名称，或检测到的标记标签或颜色斑点的坐标和大小。

\jvimg{jvinv0006.png, 70%}

在上面的示例中，JeVois 检测到了 ArUco 标记标签（ID 为 U42、U27、U18 和 U43）、两个蓝色斑点（由名为 \b blob0 的颜色检测器检测）和一个黄色斑点（由 \b blob1 检测）。对于每个检测到的对象，JeVois 还会发送其 4 个角的 4 个标准化（介于 -1000 和 1000 之间，以 0 为中心）2D 坐标（详细消息格式）。

有关这些消息及其详细程度（简洁、正常、详细或精细）的更多信息，请参阅 \ref UserSerialStyle

有关 JeVois 命令行界面的更多信息，请参阅 \ref UserCli 

更改相机设置 
------------------------

有时使用低级相机传感器控件（例如白平衡、增益和曝光）来优化机器视觉算法的性能很有用。选择 \b 相机选项卡可访问这些传感器控件。

\jvimg{jvinv0007.png, 70%}

- 请注意某些控制如何依赖于其他控制（例如，当自动增益处于活动状态时，增益被禁用并且无法更改）。

- 单击每个控件旁边的 \b Reset 即可恢复为其默认值。

- 关于绝对曝光控制的特别说明：要启用绝对曝光，请先为 \b autoexp 参数选择 \b manual。这将激活 \b absexp 和 \b gain 滑块，同时关闭 \b autogain。请注意，\b absexp 的可用范围取决于当前相机传感器分辨率和帧速率，因为我们无法将图像曝光超过大约一个帧周期（帧速率的倒数）。因此，在大多数情况下，当您将滑块一直拖到最大值时，它会迅速回到当前视频分辨率和帧速率允许的最大值，这是正常的。

配置文件 
------------

配置文件允许为 JeVois 或给定模块设置一些参数，这些参数将在每次启动 JeVois 或调用该模块时使用。您可以将其视为为 JeVois 或给定模块设置默认首选项。

单击 \b Config 选项卡，然后您可以选择 4 个配置文件之一：

- <b>JeVois initscript.cfg：</b>JeVois 启动时运行一次的全局配置文件。如果您希望 JeVois 自动启动一个特定的机器视觉模块而无需任何用户干预（无头模式），则此文件很有用，例如当 JeVois 用于只有 Arduino 控制器且没有主机计算机来运行 JeVois Inventor 的机器人时。

- <b>JeVois videomappings.cfg：</b>这是 JeVois 通过 USB 传输的视频分辨率与相应的相机传感器分辨率之间的映射列表，以及要运行的机器视觉模块。当主机计算机向 JeVois 请求给定的视频格式时，此文件用于决定在 JeVois 上运行哪个机器视觉模块。

有关详细信息，请参阅 \ref UserModes

- <b>模块的 params.cfg：</b>其中包含当前模块的参数，每次加载模块时以及启动模块之前都应设置这些参数。例如，\jvmod{TensorFlowEasy} 等深度神经网络模块使用此文件来配置将使用哪个神经网络。

- <b>模块的 script.cfg：</b>这是当前模块的脚本文件，在模块加载和初始化后运行。可以将其他参数或相机控制设置放入此文件中。例如，\jvmod{ArUcoBlob} 使用此文件配置并行运行的四个颜色 blob 检测器的四种颜色。

\jvimg{jvinv0008.png, 70%}


请注意底部的两个中间按钮：

- \b C：将当前相机控制（使用 \b 相机选项卡手动调整）粘贴到当前显示的文件（只有脚本文件可以接受此功能）
- \b P：将当前模块参数（使用 \b 参数选项卡手动调整）粘贴到当前显示的文件（参数和脚本文件都可以接受此功能）

编辑机器视觉代码
------------------------------

\note 目前，此功能仅支持 Python 模块。目前尚不清楚我们是否也能支持 C++ 模块。因此，您应该选择一个 Python 模块（在 <b>Vision Module</b> 下拉菜单中以粗体显示）。可以看到 C++ 模块的源代码，但目前在 JeVois Inventor 中是只读的。

选择 \b 代码选项卡可以访问编辑器来查看当前正在运行的模块的源代码。

\jvimg{jvinv0009.png, 70%}

编辑代码，按 `CTRL`-S 保存到 JeVois，您将立即看到结果。

不要害羞，只需尝试一些 OpenCV 代码，看看会发生什么。基本思路是，您从相机传感器获得一个图像 \b inimg，您的任务是创建一个输出图像 \b outimg，该图像将通过 USB 发送到主机。

关于编辑器的一些说明：

- 它具有语法高亮功能（关键字、注释等使用不同颜色）
- 自动缩进（如果在 `:` 后按 `RETURN`，缩进会增加）
- 使用 `TAB` 添加缩进，使用 `Shift+TAB` 减少缩进
- 缩进（前导空格）以灰点显示

创建一个新的机器视觉模块 
------------------------------------

从<b>Vision Module</b>下拉菜单中选择<b>New Python Module...</b>。

\jvimg{jvinv0010.png, 70%}

输入数据。<b>所有字段均为必填项。</b> \b 完成按钮只有在您输入可接受的数据后才会启用。将鼠标悬停在每个字段上即可查看提示。

\note 模块名称和模块供应商必须以大写字母开头。除非您输入至少一个大写字母，否则您将无法在这些框中输入任何内容。请务必将鼠标悬停在每个字段上并阅读工具提示以获取更多信息。

对于简单模块，您通常会为 USB 输出和相机传感器选择相同的分辨率。对于更复杂的模块，例如并排显示输出，左侧显示原始视频帧，右侧显示机器视觉结果，它们可能会有所不同（例如，在并排示例中，相机传感器分辨率可能是 320x240，而 USB 输出将是 640x240）。模块编写者有责任创建具有正确分辨率的输出图像，然后 JeVois 核心会通过 USB 将其发送到主机。

要开始编写新模块，请查看 \ref ModulePythonTutorial、\​​ref ProgrammerPython 和 \ref ProgrammerTutos

系统设置
---------------

如果您想停止视频流，请使用 \b 系统选项卡。在使用 `setmapping2` 命令以无头模式启动模块之前，需要执行此操作。例如，请参阅[关于为 JeVois 制作摇摄/倾斜云台的教程](http://jevois.org/tutorials/UserPanTilt.html)，无 USB 输出运行部分。

\jvimg{jvinv0011.png, 70%}

您还可以将 JeVois 中的 microSD 作为虚拟闪存驱动器导出到主机。启用后，桌面上会出现一个新的闪存驱动器，您可以浏览 JeVois 的 microSD 上的文件。这对于备份您的自定义模块或加载新训练的深度神经网络非常有用。

\jvimg{jvinv0012.png, 70%}

当您在 JeVois 内浏览 microSD 时，您无法更改或使用机器视觉模块。完成后，请从主机中正确弹出虚拟 USB 驱动器（安全移除、拖到垃圾箱、弹出按钮等），JeVois 将重新启动以考虑您对其 microSD 卡所做的更改。

深入了解 
------------

JeVois Inventor 只是 JeVois 核心的简单前端。除了 JeVois Inventor 支持的功能外，您还可以使用 JeVois 完成更多任务。请参阅 http://jevois.org/doc/ 以获取更全面的文档。

特别要注意的是：

- [用户教程](/tutorials)

- [程序员教程](/tutorials) 向您展示使用 Inventor 在 JeVois 上进行 Python + OpenCv 编程的简单示例。

发行说明 
-------------

JeVois Inventor 0.1.0
- 初始版本

JeVois Inventor 0.2.0
- 在 Windows 平台上更好地检测设备
- 将旋转框附加到所有滑块
- 为所有编辑器添加行号并突出显示当前行
- 从文件菜单添加了指向各种文档页面的链接。

Windows 故障排除 
---------------------------

JeVois Inventor 会尝试自动检测 JeVois 相机，这样您不必在每次启动 Inventor 或重新启动相机时选择其设备。

JeVois 智能相机是一个复合 USB 设备，包含三个子设备：
- USB 视频类 (UVC) 视频相机，用于通过 USB 传输视频；
- CDC-ACM 串行 USB 端口，用于向 JeVois 发送命令；
- 大容量存储设备，用于将 JeVois 内部的 microSD 卡作为虚拟闪存驱动器进行访问。

要工作，JeVois Inventor 需要检测至少前两个子设备。在 Linux 和 MacOS 上，通过枚举所有连接的摄像头和串行端口，并找到制造商或产品描述中包含单词 \a JeVois 的设备，此方法效果很好。

但是，此功能（由 JeVois Inventor 所用的 [Qt](http://qt.io) 小部件工具包提供）似乎在 Windows 平台上无法很好地工作。尽管 JeVois 相机在连接时会向主机发送制造商和产品描述，但 Windows 似乎会忽略这些内容。相反，Windows 会为 JeVois 分配名称，而这些名称似乎是您计算机上先前加载的驱动程序 (.inf) 文件中存在的任何名称。

如果 Inventor 无法检测到您的 JeVois 相机，请尝试以下操作：

- 断开相机连接并打开<b>控制面板</b>，然后打开<b>设备管理器</b>。

- 展开<b>成像设备</b>（或 Windows 10 上的<b>相机</b>）和<b>端口（COM 和 LPT）</b>的条目。

- 连接 JeVois 并等待 Windows 检测到它。

- 应出现一个新的成像设备和一个新的端口；记下它们的名称。在下面的示例中，JeVois 被分配了 <em>UVC Camera</em> 作为相机子设备的名称，<em>Gadget Serial</em> 作为串行 USB 子设备的名称。在 Windows 7 上，您可能需要使用 `jevois-serial.inf`（如 \ref USBserialWindows 中所述）来安装正确的 USB 串行驱动程序。根据您的 Windows 版本和已安装驱动程序的历史记录，这些名称会有很大差异。如果您以前没有在计算机上使用过 USB 相机或串行 USB 适配器，它们将正确包含单词 \a JeVois（即，JeVois 是第一个检测到的此类设备，然后 Windows 将获取并使用该设备宣传的正确名称）。

  \image html jvinv-devices.png

- 从 JeVois Inventor 0.2.0 开始，如果 JeVois 无法自动检测到，您将被邀请手动选择相机、USB 串行或两个子设备。使用您首次连接 JeVois 相机时在<b>设备管理器</b>中记下的名称：

  \image html jvinv-devsel.png

- 为了避免每次重新启动 Inventor 时都需要选择设备名称，您可以尝试卸载现有驱动程序，以便下次 Windows 检测到 JeVois 并重新安装驱动程序时会提取正确的名称：

  + 连接 JeVois 并等待 Windows 检测到它。
  + 在 <b>设备管理器</b> 中，右键单击设备并选择 <b>卸载</b>。接受卸载。对相机设备和（仅限 Windows 7）串行端口设备执行此操作（您无法在 Windows 10 上卸载 Microsoft 串行端口设备）。
  + 断开 JeVois。
  + 一分钟后，再次连接 JeVois。您应该会看到一些有关检测到新设备的消息。不要触摸任何东西，让 Windows 安装驱动程序。一两分钟后，驱动程序应该已经安装并可以使用。
  + 对于串行 USB 端口，在 Windows 10 上它是内置的，您无法更改它，它的名称固定为“USB 串行设备”。因此，JeVois Inventor 除了接受包含单词 JeVois 的名称外，还接受此名称。在 Windows 7 上，使用 `jevois-serial.inf`（如 \ref USBserialWindows 中所述）安装正确的驱动程序。
  + 在<b>设备管理器</b>中的<b>成像设备</b>（或<b>相机</b>）下，确认 JeVois 相机子设备的名称现在为“JeVois-A33 摄像机”。
  + 在<b>端口（COM 和 LPT）</b>下，名称现在应为“JeVois-A33 Serial-over-USB”（Windows 7）或“USB 串行端口”（Windows 10）。
  + Inventor 现在应该会自动检测您的相机，无需手动选择设备。

\image html jvinv-gooddev.png 上图：卸载摄像头驱动程序并更新串行驱动程序后的 Windows 7 设备

\image html jvinv-gooddev10.png 上图：卸载摄像头驱动程序后的 Windows 10 设备（串行驱动程序无法更改）

*/

