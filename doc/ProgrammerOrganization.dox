/*! \page ProgrammerOrganization Organization of JeVois files on host and platform

As detailed in \ref Concepts, JeVois software can be compiled and installed simultaneously for a desktop computer (host
mode, typically using an Intel computer for rapid development and testing of new machine vision algorithms, and for the
JeVois platform hardware (platform mode, where everything is cross-compiled for the ARM processor inside JeVois).

An additional factor is that the microSD for JeVois may not be available at the time the various elements (Linux kernel,
Linux operating system and utilities, OpenCV and other libraries, JeVois core, JeVois modules, etc) are compiled. Thus,
compiling and installing in platform mode will make use of some so-called staging areas, which are some directories on
the host computers where the various bits and pieces will be assembled so that they can later be flashed to microSD.

Organization overview
=====================

- On the platform, all modules and config files get installed into a dedicated VFAT partition:
  + \jva33: \b /jevois (which can be exported by JeVois as a virtual USB drive).
  + \jvpro: \b /jevoispro

- Executables, core libraries and include files get installed into \b /usr/bin, \b /usr/lib, \b /usr/include, etc as
  usual.

- Hence, on host, we also install all modules and config files into \b /jevois or \b /jevoispro (this is mainly to avoid
  surprises with different paths on host and platform and troubleshooting why a module that worked great in host mode
  cannot find its data files when running on platform).

- Likewise, we also install executables, libraries and include files natively compiled for host into \b /usr/bin, \b
  /usr/lib, \b /usr/include, etc as usual.

- \jva33: Further, bootloaders, boot config files, and compiled operating system for the JeVois platform are placed into
  a first staging directory <b>/var/lib/jevois-build</b>, which is dedicated to all files that will end up into the \b
  LINUX and \b BOOT partitions on the microSD.

- \jva33: Cross-compiled machine vision modules, libraries, and config files for the platform are placed into a second
  staging directory </b>/var/lib/jevois-microsd</b>, which is dedicated to all files that will end up into the \b JEVOIS
  partition on the microSD.

- \jva33: Final microSD flashing script \b jevois-flash-card combines the contents of <b>/var/lib/jevois-build</b> and
  </b>/var/lib/jevois-microsd</b> into the final microSD card.

- \jvpro: The operating system for the camera, bootloaders, etc are in \b /usr/share/jevoispro-sdk

JeVois-A33 Organization details
===============================

- When compiling and installing \b jevois for \b host (using `./rebuild-host.sh` inside \b jevois; see \ref
  CompilingJeVois):
  + Config files used by JeVois at runtime are installed into <b>/jevois/config/</b>
  + Executables including \c jevois-daemon are installed into <b>/usr/bin/</b>
  + Include files (needed when compiling modules for host) are installed into <b>/usr/include/jevois/</b>
  + The core JeVois library (\b libjevois.so) is installed into <b>/usr/lib/</b>
  + Documentation files are installed into <b>/usr/share/doc/jevois-host/</b>
  + Try a `dpkg -c jevois-host-VERSION.deb` on the deb downloaded from http://jevois.usc.edu to confirm.

- When cross-compiling and installing \b jevois for \b platform (using `./rebuild-platform.sh` inside \b jevois;
  see \ref CompilingJeVois):
  + Config files used by JeVois at runtime are staged into <b>/var/lib/jevois-microsd/config/</b> and will be installed
    into <b>/jevois/config/</b> on the actual microSD card.
  + Executables including \c jevois-daemon are staged into <b>/var/lib/jevois-build/usr/bin/</b> and will be installed
    into <b>/usr/bin/</b> on the actual microSD card.
  + Include files are staged into <b>/var/lib/jevois-build/usr/include/jevois/</b> and will be installed into
    <b>/usr/include/jevois/</b> on the actual microSD card.
  + The core JeVois library (\b libjevois.so) is staged into <b>/var/lib/jevois-build/usr/lib/</b> and will be
    installed into <b>/usr/lib/</b> on the actual microSD card.
  + Documentation files are staged into <b>/var/lib/jevois-build/usr/share/doc/jevois-platform/</b> and will be
    installed into <b>/usr/share/doc/jevois-platform/</b> on the actual microSD card.
  + Try a `dpkg -c jevois-platform-VERSION.deb` on the deb downloaded from http://jevois.usc.edu to confirm.

- When compiling and installing \b jevoisbase (or, similarly, \b samplemodule or your own module) for \b host (using
  `./rebuild-host.sh` inside \b jevoisbase (or your module's source tree); see \ref CompilingJeVois):
  + Config files used by JeVois at runtime are installed into <b>/jevois/config/</b>
  + Machine vision modules are installed into <b>/jevois/modules/</b>
  + Executables (if any) are installed into <b>/usr/bin/</b>
  + Include files (possibly needed when compiling further modules for host) are installed into
    <b>/usr/include/jevoisbase/</b>
  + Libraries (if any) is installed into <b>/usr/lib/</b>
  + Documentation files are installed into <b>/usr/share/doc/jevoisbase-host/</b>
  + Try a `dpkg -c jevoisbase-host-VERSION.deb` on the deb downloaded from http://jevois.usc.edu to confirm.

- When cross-compiling and installing \b jevoisbase (or, similarly, \b samplemodule or your own module) for
  \b platform (using `./rebuild-platform.sh` inside \b jevoisbase (or your module's source tree); see \ref
  CompilingJeVois):
  + Config files used by JeVois at runtime are staged into <b>/var/lib/jevois-microsd/config/</b> and will be installed
    into <b>/jevois/config/</b> on the actual microSD card.
  + Machine vision modules are staged into <b>/var/lib/jevois-microsd/modules/J</b>  and will be installed into
    <b>/jevois/modules/</b> on the actual microSD card.
  + Executables (if any) are staged into <b>/var/lib/jevois-build/usr/bin/</b> and will be installed
    into <b>/usr/bin/</b> on the actual microSD card.
  + Include files are staged into <b>/var/lib/jevois-build/usr/include/jevoisbase/</b> and will be installed into
    <b>/usr/include/jevoisbase/</b> on the actual microSD card.
  + Libraries (if any) (e.g., \b libjevoisbase.so) are staged into <b>/var/lib/jevois-microsd/lib/</b> and will be
    installed into <b>/jevois/lib/</b> on the actual microSD card. Note the deviation here compared to host; this is
    so that, on host, the libraries can be loaded easily without requiring special fiddling with library paths,
    while, on platform, it is desirable to have them in <b>/jevois/</b> so that they can be upgraded by exporting
    the \b JEVOIS partition over USB while JeVois is running.
  + Documentation files are staged into <b>/var/lib/jevois-build/usr/share/doc/jevoisbase-platform/</b> and will be
    installed into <b>/usr/share/doc/jevoisbase-platform/</b> on the actual microSD card.
  + Try a `dpkg -c jevoisbase-platform-VERSION.deb` on the deb downloaded from http://jevois.usc.edu to confirm.

- \b OpenCV is installed into <b>/usr/share/jevois-opencv-VERSION/</b> on host and into <b>/usr/bin/</b>,
  <b>/usr/lib/</b>, <b>/usr/include/</b>, etc on platform. Here again there is a difference between host and platform,
  which is due to the desire of not being too obtrusive on the host, as more and more other software packages tend to
  rely on the standard Ubuntu-provided OpenCV packages, even though those may not be appropriate for JeVois (e.g., older
  OpenCV version, possibly no contribs, possibly no Python or different Python version, etc)

- The \b jevois-sdk Ubuntu package provides the following files needed to create a JeVois microSD card, which are
  some of the results of running the complex full rebuild from source in \b jevois-sdk:
  + `/usr/bin/jevois-flash-card` script to flash microSD cards for JeVois.
  + Bootloader files, Linux operating system for platform, etc in <b>/var/lib/jevois-build/boot/</b>
  + Try a `dpkg -c jevois-sdk-VERSION.deb` on the deb downloaded from http://jevois.usc.edu to confirm.

- The \b jevois-sdk-dev Ubuntu package provides the following additional files needed for further development
  (e.g., cross-compiled OpenCV libraries, cross-compiled boost, cross-compilers, etc), which are some of the results
  of running the complex full rebuild from source in \b jevois-sdk:
  + Pre-compiled whole buildroot tree in <b>/usr/share/jevois-sdk/out/</b>

JeVois-Pro Organization details
===============================

- When compiling and installing \b jevois for \b host (using `./rebuild-pro-host.sh` inside \b jevois; see \ref
  CompilingJeVois):
  + Config files used by JeVois at runtime are installed into <b>/jevoispro/config/</b>
  + Executables including \c jevoispro-daemon are installed into <b>/usr/bin/</b>
  + Include files (needed when compiling modules for host) are installed into <b>/usr/include/jevois/</b>
  + The core JeVois library (\b libjevoispro.so) is installed into <b>/usr/lib/</b>
  + Documentation files are installed into <b>/usr/share/doc/jevoispro-host/</b>
  + Try a `dpkg -c jevoispro-host-VERSION.deb` on the deb downloaded from https://jevois.usc.edu to confirm.

- When cross-compiling and installing \b jevois for \b platform (using `./rebuild-pro-platform-pdeb.sh` inside \b
  jevois; see \ref CompilingJeVois):
  + You will create a deb package for aarch64 (64-bit ARM) with the same file locations as above.
  + This package should be installed on the JeVois-Pro platform using dpkg while logged on the platform.
  + Try a `dpkg -c jevois-platform-VERSION.deb` on the deb downloaded from https://jevois.usc.edu to confirm
    all file locations.

- When compiling and installing \b jevoisbase (or, similarly, \b samplemodule or your own module) for \b host (using
  `./rebuild-host.sh` inside \b jevoisbase (or your module's source tree); see \ref CompilingJeVois):
  + Config files used by JeVois at runtime are installed into <b>/jevoispro/config/</b>
  + Machine vision modules are installed into <b>/jevoispro/modules/</b>
  + Executables (if any) are installed into <b>/usr/bin/</b>
  + Include files (possibly needed when compiling further modules for host) are installed into
    <b>/usr/include/jevoisbase/</b>
  + Libraries (if any) is installed into <b>/usr/lib/</b>
  + Documentation files are installed into <b>/usr/share/doc/jevoisprobase-host/</b>
  + Try a `dpkg -c jevoisprobase-host-VERSION.deb` on the deb downloaded from https://jevois.usc.edu to confirm.

- When cross-compiling and installing \b jevoisbase (or, similarly, \b samplemodule or your own module) for
  \b platform (using `./rebuild-pro-platform-pdeb.sh` inside \b jevoisbase (or your module's source tree); see \ref
  CompilingJeVois):
  + You will create a deb package for aarch64 (64-bit ARM) with the same file locations as above.
  + This package should be installed on the JeVois-Pro platform using dpkg while logged on the platform.
  + Try a `dpkg -c jevoisprobase-platform-VERSION.deb` on the deb downloaded from https://jevois.usc.edu to confirm
    all file locations.

- \b OpenCV and \b OpenVino are installed into <b>/usr/share/jevoispro-opencv-VERSION/</b> and
  <b>/usr/share/jevoispro-openvino-VERSION/</b> on host and platform, to avoid possible conflicts with other OpenCV and
  OpenVino installations you may already have.

- The \b jevoispro-sdk-dev Ubuntu package for host provides the following files needed to cross-compile JeVois software:
  + <b>/usr/share/jevoispro-sdk/jevoispro-sysroot</b> contains a sanitized version of the whole operating system that
    runs on JeVois-Pro. It is sanitized in terms of having all symbolic links converted to relative locations within the
    jevoispro-sysroot directory, as opposed to having some absolute symlinks in a standard Linux operating system (those
    absolute links would end up pointing to libraries and other files in your root filesystem, which is for Intel AMD64,
    as opposed to the needed AARCH64 libraries and files).
  + Try a `dpkg -c jevois-sdk-VERSION.deb` on the deb downloaded from https://jevois.usc.edu to confirm.


*/

