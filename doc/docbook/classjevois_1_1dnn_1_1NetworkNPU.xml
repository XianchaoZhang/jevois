<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classjevois_1_1dnn_1_1NetworkNPU">
<title>jevois::dnn::NetworkNPU Class Reference</title>
<indexterm><primary>jevois::dnn::NetworkNPU</primary></indexterm>
<para>
<computeroutput>#include &lt;jevois/DNN/NetworkNPU.H&gt;</computeroutput>
</para>
<section>
<title> </title>

<para>在 Amlogic A311D NPU 加速器 (Verisilicon) 上运行的 DNN 神经网络的包装器 </para>
<para>
Definition at line 32 of file NetworkNPU.H.</para>
Inheritance diagram for jevois::dnn::NetworkNPU:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classjevois_1_1dnn_1_1NetworkNPU__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for jevois::dnn::NetworkNPU:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classjevois_1_1dnn_1_1NetworkNPU__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual <link linkend="_classjevois_1_1dnn_1_1NetworkNPU_1a97010018ca7d0f1ec21a4591bf999172">~NetworkNPU</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>void <link linkend="_classjevois_1_1dnn_1_1NetworkNPU_1accf0020410f345569848d7c058cdafce">freeze</link> (bool doit) override</para>

<para>冻结/解冻参数，用户在运行时不应更改 </para>
</listitem>
            <listitem><para>virtual std::vector&lt; vsi_nn_tensor_attr_t &gt; <link linkend="_classjevois_1_1dnn_1_1NetworkNPU_1a224fdf64248311c3249cda899f9c2c27">inputShapes</link> () override</para>

<para>Get shapes of all input tensors. </para>
</listitem>
            <listitem><para>virtual std::vector&lt; vsi_nn_tensor_attr_t &gt; <link linkend="_classjevois_1_1dnn_1_1NetworkNPU_1a29cf0728bb86204b856576b0f058f769">outputShapes</link> () override</para>

<para>Get shapes of all output tensors. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_classjevois_1_1dnn_1_1NetworkNPU_1adf4c6a47ab88ec64c630c98fd343122c">load</link> () override</para>

<para>Load from disk. </para>
</listitem>
            <listitem><para>std::vector&lt; cv::Mat &gt; <link linkend="_classjevois_1_1dnn_1_1NetworkNPU_1a9d284f745c6c98178f81ba77764191be">doprocess</link> (std::vector&lt; cv::Mat &gt; const &amp;blobs, std::vector&lt; std::string &gt; &amp;info) override</para>

<para>Process input blobs and obtain output blobs. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Related Functions    </title>

<para>(Note that these are not member functions.) </para>
        <itemizedlist>
            <listitem><para><link linkend="_classjevois_1_1dnn_1_1NetworkNPU_1a1b9b3b04b110c6d8f32654aa6210660e">JEVOIS_DECLARE_PARAMETER</link> (verifygraph, bool, &quot;Verify NPU graph after loading it&quot;, true, ParamCateg)</para>

<para>Parameter. </para>
</listitem>
            <listitem><para><link linkend="_classjevois_1_1dnn_1_1NetworkNPU_1a53acad119e33ca23a3677a636ffaa064">JEVOIS_DECLARE_PARAMETER</link> (ovxver, std::string, &quot;ovxlib version to use with NPU network, or leave blank &quot; &quot;to use latest version&quot;, &quot;&quot;, boost::regex(&quot;^$|^[0-9]+\\.[0-9]+\\.[0-9]+$&quot;), ParamCateg)</para>

<para>Parameter. </para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classjevois_1_1dnn_1_1NetworkNPU_1a97010018ca7d0f1ec21a4591bf999172"/>    <section>
    <title>~NetworkNPU()</title>
<indexterm><primary>~NetworkNPU</primary><secondary>jevois::dnn::NetworkNPU</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkNPU</primary><secondary>~NetworkNPU</secondary></indexterm>
<para><computeroutput>jevois::dnn::NetworkNPU::~NetworkNPU ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>
<para>
Definition at line 118 of file NetworkNPU.C.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classjevois_1_1dnn_1_1NetworkNPU_1a9d284f745c6c98178f81ba77764191be"/>    <section>
    <title>doprocess()</title>
<indexterm><primary>doprocess</primary><secondary>jevois::dnn::NetworkNPU</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkNPU</primary><secondary>doprocess</secondary></indexterm>
<para><computeroutput>std::vector&lt; cv::Mat &gt; jevois::dnn::NetworkNPU::doprocess (std::vector&lt; cv::Mat &gt; const &amp; blobs, std::vector&lt; std::string &gt; &amp; info)<computeroutput>[override]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Process input blobs and obtain output blobs. </para>
</para>
<para>
Implements <link linkend="_classjevois_1_1dnn_1_1Network_1a0715f8cd89af48245f39ed1bd00c0849">jevois::dnn::Network</link>.</para>
<para>
Definition at line 206 of file NetworkNPU.C.</para>
<para>
References jevois::dnn::attrmat(), jevois::dnn::attrmatch(), jevois::dnn::attrstr(), jevois::dnn::dequantize(), LFATAL, jevois::dnn::shapestr(), jevois::to_string(), and jevois::warnAndRethrowException().</para>
    </section><anchor xml:id="_classjevois_1_1dnn_1_1NetworkNPU_1accf0020410f345569848d7c058cdafce"/>    <section>
    <title>freeze()</title>
<indexterm><primary>freeze</primary><secondary>jevois::dnn::NetworkNPU</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkNPU</primary><secondary>freeze</secondary></indexterm>
<para><computeroutput>void jevois::dnn::NetworkNPU::freeze (bool doit)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>冻结/解冻参数，用户在运行时不应更改 </para>
</para>
<para>
Reimplemented from <link linkend="_classjevois_1_1dnn_1_1Network_1af49aabe3e1317946de848f356970fa8d">jevois::dnn::Network</link>.</para>
<para>
Definition at line 126 of file NetworkNPU.C.</para>
<para>
References jevois::dnn::Network::freeze().</para>
    </section><anchor xml:id="_classjevois_1_1dnn_1_1NetworkNPU_1a224fdf64248311c3249cda899f9c2c27"/>    <section>
    <title>inputShapes()</title>
<indexterm><primary>inputShapes</primary><secondary>jevois::dnn::NetworkNPU</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkNPU</primary><secondary>inputShapes</secondary></indexterm>
<para><computeroutput>std::vector&lt; vsi_nn_tensor_attr_t &gt; jevois::dnn::NetworkNPU::inputShapes ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Get shapes of all input tensors. </para>
</para>
<para>
Implements <link linkend="_classjevois_1_1dnn_1_1Network_1a5c4daabb6b084f87ce330f98159ebaa7">jevois::dnn::Network</link>.</para>
<para>
Definition at line 78 of file NetworkNPU.C.</para>
<para>
References jevois::dnn::parseTensorSpecs().</para>
    </section><anchor xml:id="_classjevois_1_1dnn_1_1NetworkNPU_1adf4c6a47ab88ec64c630c98fd343122c"/>    <section>
    <title>load()</title>
<indexterm><primary>load</primary><secondary>jevois::dnn::NetworkNPU</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkNPU</primary><secondary>load</secondary></indexterm>
<para><computeroutput>void jevois::dnn::NetworkNPU::load ( )<computeroutput>[override]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Load from disk. </para>
</para>
<para>
Implements <link linkend="_classjevois_1_1dnn_1_1Network_1a2aff2f5a849ddd5ce91ae454bf9375ec">jevois::dnn::Network</link>.</para>
<para>
Definition at line 137 of file NetworkNPU.C.</para>
<para>
References jevois::absolutePath(), LFATAL, LINFO, NEW_VXNODE, jevois::dnn::parseTensorSpecs(), and jevois::split().</para>
    </section><anchor xml:id="_classjevois_1_1dnn_1_1NetworkNPU_1a29cf0728bb86204b856576b0f058f769"/>    <section>
    <title>outputShapes()</title>
<indexterm><primary>outputShapes</primary><secondary>jevois::dnn::NetworkNPU</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkNPU</primary><secondary>outputShapes</secondary></indexterm>
<para><computeroutput>std::vector&lt; vsi_nn_tensor_attr_t &gt; jevois::dnn::NetworkNPU::outputShapes ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Get shapes of all output tensors. </para>
</para>
<para>
Implements <link linkend="_classjevois_1_1dnn_1_1Network_1a98a8d50e49ba4d9f827ff9b5d4c8b68f">jevois::dnn::Network</link>.</para>
<para>
Definition at line 84 of file NetworkNPU.C.</para>
<para>
References jevois::dnn::parseTensorSpecs().</para>
</section>
</section>
<section>
<title>Friends And Related Function Documentation</title>
<anchor xml:id="_classjevois_1_1dnn_1_1NetworkNPU_1a53acad119e33ca23a3677a636ffaa064"/>    <section>
    <title>JEVOIS_DECLARE_PARAMETER()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>JEVOIS_DECLARE_PARAMETER</primary><secondary>jevois::dnn::NetworkNPU</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkNPU</primary><secondary>JEVOIS_DECLARE_PARAMETER</secondary></indexterm>
<para><computeroutput>JEVOIS_DECLARE_PARAMETER (ovxver , std::string , &quot;ovxlib version to use with NPU network, or leave blank &quot; &quot;to use latest version&quot; , &quot;&quot; , boost::regex(&quot;^$|^[0-9]+\\.[0-9]+\\.[0-9]+$&quot;) , ParamCateg )<computeroutput>[related]</computeroutput></computeroutput></para><para>

<para>Parameter. </para>
</para>
    </section><anchor xml:id="_classjevois_1_1dnn_1_1NetworkNPU_1a1b9b3b04b110c6d8f32654aa6210660e"/>    <section>
    <title>JEVOIS_DECLARE_PARAMETER()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>JEVOIS_DECLARE_PARAMETER</primary><secondary>jevois::dnn::NetworkNPU</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkNPU</primary><secondary>JEVOIS_DECLARE_PARAMETER</secondary></indexterm>
<para><computeroutput>JEVOIS_DECLARE_PARAMETER (verifygraph , bool , &quot;Verify NPU graph after loading it&quot; , true , ParamCateg )<computeroutput>[related]</computeroutput></computeroutput></para><para>

<para>Parameter. </para>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/jevois/DNN/<link linkend="_NetworkNPU_8H">NetworkNPU.H</link>include/jevois/DNN/<link linkend="_Network_8H">Network.H</link>src/jevois/DNN/<link linkend="_NetworkNPU_8C">NetworkNPU.C</link></section>
</section>
