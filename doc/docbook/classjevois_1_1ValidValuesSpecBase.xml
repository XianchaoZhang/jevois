<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classjevois_1_1ValidValuesSpecBase">
<title>jevois::ValidValuesSpecBase&lt; T &gt; Class Template Reference</title>
<indexterm><primary>jevois::ValidValuesSpecBase&lt; T &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;jevois/Component/ValidValuesSpec.H&gt;</computeroutput>
</para>
<section>
<title> </title>
<simplesect><title>template&lt;typename T&gt;
class jevois::ValidValuesSpecBase&lt; T &gt;</title></simplesect>


<para>用于为类型指定一组有效值的基类 </para>



<para>定义新的派生有效值规范时请注意：确保定义 <link linkend="_structjevois_1_1VideoMapping_1ad08d440b2fdbff06067ec4f2bfff3a79">operator&lt;&lt;()</link> 并且复制构造函数按预期工作（这意味着如果数据成员很复杂， 则可能必须明确定义它）。 </para>
<para>
Definition at line 42 of file ValidValuesSpec.H.</para>
Inheritance diagram for jevois::ValidValuesSpecBase&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classjevois_1_1ValidValuesSpecBase__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classjevois_1_1ValidValuesSpecBase_1a693a4adb87c6f1aceb1318b258e805f9">ValidValuesSpecBase</link> ()</para>

<para>构造，对于基类，这是一个 no-op </para>
</listitem>
            <listitem><para>virtual <link linkend="_classjevois_1_1ValidValuesSpecBase_1a102b2d59bdc9bd6c6c51d4ae7362a774">~ValidValuesSpecBase</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classjevois_1_1ValidValuesSpecBase_1ac1198c7ddd9c246cc9f6e68b0c20b4f9">checkValueValidity</link> (T const &amp;val) const =0</para>

<para>检查提议的值是否有效，如果是虚拟的，则返回 true </para>
</listitem>
            <listitem><para>virtual const std::string <link linkend="_classjevois_1_1ValidValuesSpecBase_1ac354706e1ae5638204584d660b0b6f47">str</link> () const =0</para>

<para>将有效值的规范转换为可读字符串 </para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classjevois_1_1ValidValuesSpecBase_1a693a4adb87c6f1aceb1318b258e805f9"/>    <section>
    <title>ValidValuesSpecBase()</title>
<indexterm><primary>ValidValuesSpecBase</primary><secondary>jevois::ValidValuesSpecBase&lt; T &gt;</secondary></indexterm>
<indexterm><primary>jevois::ValidValuesSpecBase&lt; T &gt;</primary><secondary>ValidValuesSpecBase</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classjevois_1_1ValidValuesSpecBase">jevois::ValidValuesSpecBase</link>&lt; T &gt;::<link linkend="_classjevois_1_1ValidValuesSpecBase">ValidValuesSpecBase</link> ( )<computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>构造，对于基类，这是一个 no-op </para>
</para>

<para>请注意，我们要明确构造函数，否则我们会对字符串和在各种 ValidValueSpec 派生函数上定义的 operator&lt;&lt; 中不存在 的内容产生错误命中。 </para>
    </section><anchor xml:id="_classjevois_1_1ValidValuesSpecBase_1a102b2d59bdc9bd6c6c51d4ae7362a774"/>    <section>
    <title>~ValidValuesSpecBase()</title>
<indexterm><primary>~ValidValuesSpecBase</primary><secondary>jevois::ValidValuesSpecBase&lt; T &gt;</secondary></indexterm>
<indexterm><primary>jevois::ValidValuesSpecBase&lt; T &gt;</primary><secondary>~ValidValuesSpecBase</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>virtual <link linkend="_classjevois_1_1ValidValuesSpecBase">jevois::ValidValuesSpecBase</link>&lt; T &gt;::~<link linkend="_classjevois_1_1ValidValuesSpecBase">ValidValuesSpecBase</link> ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classjevois_1_1ValidValuesSpecBase_1ac1198c7ddd9c246cc9f6e68b0c20b4f9"/>    <section>
    <title>checkValueValidity()</title>
<indexterm><primary>checkValueValidity</primary><secondary>jevois::ValidValuesSpecBase&lt; T &gt;</secondary></indexterm>
<indexterm><primary>jevois::ValidValuesSpecBase&lt; T &gt;</primary><secondary>checkValueValidity</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>virtual bool <link linkend="_classjevois_1_1ValidValuesSpecBase">jevois::ValidValuesSpecBase</link>&lt; T &gt;::checkValueValidity (T const &amp; val) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>检查提议的值是否有效，如果是虚拟的，则返回 true </para>
</para>
<para>
Implemented in <link linkend="_classjevois_1_1ValidValuesSpecRegex_1a888360c78deb6d25850ff0ad790aee2b">jevois::ValidValuesSpecRegex&lt; T &gt;</link>, <link linkend="_classjevois_1_1ValidValuesSpecStepRange_1a55dad4d0f53eb5cfc9e41e5ebf79715f">jevois::ValidValuesSpecStepRange&lt; T &gt;</link>, <link linkend="_classjevois_1_1ValidValuesSpecRange_1a2c3c2fe52507913ca04e836b13698410">jevois::ValidValuesSpecRange&lt; T &gt;</link>, <link linkend="_classjevois_1_1ValidValuesSpecList_1a63ff2546ce2aa835022ca230a4277b68">jevois::ValidValuesSpecList&lt; T &gt;</link>, and <link linkend="_classjevois_1_1ValidValuesSpecNone_1af4b999b1a9b817e3a6b5ef8ecbcfc2fc">jevois::ValidValuesSpecNone&lt; T &gt;</link>.</para>
    </section><anchor xml:id="_classjevois_1_1ValidValuesSpecBase_1ac354706e1ae5638204584d660b0b6f47"/>    <section>
    <title>str()</title>
<indexterm><primary>str</primary><secondary>jevois::ValidValuesSpecBase&lt; T &gt;</secondary></indexterm>
<indexterm><primary>jevois::ValidValuesSpecBase&lt; T &gt;</primary><secondary>str</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>virtual const std::string <link linkend="_classjevois_1_1ValidValuesSpecBase">jevois::ValidValuesSpecBase</link>&lt; T &gt;::str ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>将有效值的规范转换为可读字符串 </para>
</para>

<para>注意，GUI 可能希望解析此字符串，因此请保持格式紧凑。通常，类型：[valuesdescription]， 例如，请参阅 None:[]、List:[A|B|C] 等的派生类。 </para>
<para>
Implemented in <link linkend="_classjevois_1_1ValidValuesSpecRegex_1adc27085c6f685943d9521714313854a9">jevois::ValidValuesSpecRegex&lt; T &gt;</link>, <link linkend="_classjevois_1_1ValidValuesSpecStepRange_1a8ea21d22b160b7855e3b87cb1f318234">jevois::ValidValuesSpecStepRange&lt; T &gt;</link>, <link linkend="_classjevois_1_1ValidValuesSpecRange_1a8a49658bf1c3fade28f574f615a5943a">jevois::ValidValuesSpecRange&lt; T &gt;</link>, <link linkend="_classjevois_1_1ValidValuesSpecList_1a3f6eebccf8a1af9dd773491c05cee7b3">jevois::ValidValuesSpecList&lt; T &gt;</link>, and <link linkend="_classjevois_1_1ValidValuesSpecNone_1ad1da5d6bc713b7b87842561310fb80b1">jevois::ValidValuesSpecNone&lt; T &gt;</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/jevois/Component/<link linkend="_ValidValuesSpec_8H">ValidValuesSpec.H</link></section>
</section>
