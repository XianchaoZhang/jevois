<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classjevois_1_1GPUimage">
<title>jevois::GPUimage Class Reference</title>
<indexterm><primary>jevois::GPUimage</primary></indexterm>
<para>
<computeroutput>#include &lt;jevois/GPU/GPUimage.H&gt;</computeroutput>
</para>
<section>
<title> </title>

<para>Class to hold a <link linkend="_classjevois_1_1GPUtexture">GPUtexture</link>, <link linkend="_classjevois_1_1GPUprogram">GPUprogram</link>, and other data associated with rendering an image in OpenGL. </para>



<para>OpenGL should have been properly setup before this class is used. </para>
<para>
Definition at line 38 of file GPUimage.H.</para>
Collaboration diagram for jevois::GPUimage:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classjevois_1_1GPUimage__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classjevois_1_1GPUimage_1a2102fa86beca2c170b1212053c329ceb">GPUimage</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_classjevois_1_1GPUimage_1a647d37928e862fa184c885ccc6fcbba6">~GPUimage</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>void <link linkend="_classjevois_1_1GPUimage_1a621cb94a4dec484e84710ae2c82d0215">set</link> (<link linkend="_classjevois_1_1RawImage">RawImage</link> const &amp;img)</para>

<para>Set pixel data from a vanilla <link linkend="_classjevois_1_1RawImage">RawImage</link>, pixel data will be copied to texture. </para>
</listitem>
            <listitem><para>void <link linkend="_classjevois_1_1GPUimage_1a6c2fc63472548c58c2b637fdf6fa5445">set</link> (cv::Mat const &amp;img, bool rgb)</para>

<para>Set pixel data from a vanilla OpenCV Mat, pixel data will be copied to texture. </para>
</listitem>
            <listitem><para>void <link linkend="_classjevois_1_1GPUimage_1a16607c4aa51636c4d8d7609c22bc18f2">set</link> (<link linkend="_classjevois_1_1InputFrame">InputFrame</link> const &amp;frame, EGLDisplay display)</para>

<para>Set pixel data from camera input frame, sharing data with camera kernel driver using zero-copy. </para>
</listitem>
            <listitem><para>void <link linkend="_classjevois_1_1GPUimage_1aa94afeb7f3fe3268588f1aae96307876">set2</link> (<link linkend="_classjevois_1_1InputFrame">InputFrame</link> const &amp;frame, EGLDisplay display)</para>

<para>Set pixel data from camera input second (scaled) frame, sharing data with camera kernel driver using zero-copy. </para>
</listitem>
            <listitem><para>void <link linkend="_classjevois_1_1GPUimage_1aeb94b2ad8524f0ae4bb293377466fb29">draw</link> (int &amp;x, int &amp;y, unsigned short &amp;w, unsigned short &amp;<link linkend="_GUIhelper_8C_1a16611451551e3d15916bae723c3f59f7">h</link>, bool noalias, glm::mat4 const &amp;pvm)</para>

<para>Draw to OpenGL. </para>
</listitem>
            <listitem><para>ImVec2 <link linkend="_classjevois_1_1GPUimage_1a52d8b84a7b85442b17448022ce116559">i2d</link> (ImVec2 const &amp;p)</para>

<para>Convert coordinates of a point from within a rendered image to on-screen. </para>
</listitem>
            <listitem><para>ImVec2 <link linkend="_classjevois_1_1GPUimage_1a30ec1434deda0fd6a78bdb0419114bed">i2ds</link> (ImVec2 const &amp;p)</para>

<para>Convert a 2D size from within a rendered image to on-screen. </para>
</listitem>
            <listitem><para>ImVec2 <link linkend="_classjevois_1_1GPUimage_1a9e893862f56fc8e9d8228ba06fbc6b0d">d2i</link> (ImVec2 const &amp;p)</para>

<para>Convert coordinates of a point from on-screen to within a rendered image. </para>
</listitem>
            <listitem><para>ImVec2 <link linkend="_classjevois_1_1GPUimage_1ae1de47987ab623cc85bbc2e95f708096">d2is</link> (ImVec2 const &amp;p)</para>

<para>Convert a 2D size from on-screen to within a rendered image. </para>
</listitem>
            <listitem><para>void <link linkend="_classjevois_1_1GPUimage_1a64a9f6deafb9a00562dda09b83e6c433">twirl</link> (float t, float alpha=1.0F)</para>

<para>Optional twirl and alpha fading effect to the image, useful mostly for demos/transitions. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_classjevois_1_1GPUimage_1acecc5df142373733b1ff89e8aaf41c04">setInternal</link> (unsigned int width, unsigned int height, unsigned int fmt, unsigned char const *data)</para>
</listitem>
            <listitem><para>void <link linkend="_classjevois_1_1GPUimage_1a4479aad42978c70f1ab3f95c2d4a5ed7">setWithDmaBuf</link> (<link linkend="_classjevois_1_1RawImage">jevois::RawImage</link> const &amp;img, int dmafd, EGLDisplay display)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>EGLDisplay <link linkend="_classjevois_1_1GPUimage_1a2d9580d4e99494928ed80416d260a0a4">itsDisplay</link></para>
</listitem>
            <listitem><para>std::shared_ptr&lt; <link linkend="_classjevois_1_1GPUtexture">GPUtexture</link> &gt; <link linkend="_classjevois_1_1GPUimage_1acea58e770a2f94f454b77cb7d458ec73">itsTexture</link></para>
</listitem>
            <listitem><para>std::shared_ptr&lt; <link linkend="_classjevois_1_1GPUprogram">GPUprogram</link> &gt; <link linkend="_classjevois_1_1GPUimage_1a3d0b15a0e29dd76afeba9022b80e2dfa">itsProgram</link></para>
</listitem>
            <listitem><para>std::shared_ptr&lt; <link linkend="_classjevois_1_1GPUtextureDmaBuf">GPUtextureDmaBuf</link> &gt; <link linkend="_classjevois_1_1GPUimage_1a754a602a3ec47535b9a0c1f52cc37c84">itsTextureDmaBuf</link></para>
</listitem>
            <listitem><para>GLuint <link linkend="_classjevois_1_1GPUimage_1a99ca07de9ae1008d9d3b2e777389d893">itsLocation</link> = 0</para>
</listitem>
            <listitem><para>GLuint <link linkend="_classjevois_1_1GPUimage_1a43aef5488a5b44f85e503baadc2bab41">itsVertexArray</link> = 0</para>
</listitem>
            <listitem><para>GLuint <link linkend="_classjevois_1_1GPUimage_1a04f14f563647d47aa6d9b7b8e317ca83">itsVertexBuffers</link> [2] = { }</para>
</listitem>
            <listitem><para>int <link linkend="_classjevois_1_1GPUimage_1a96a074e4c0bcb68aea0bc4661899e15a">itsDrawX</link> = -1234567</para>
</listitem>
            <listitem><para>int <link linkend="_classjevois_1_1GPUimage_1ad952cc3f7f8ceb6a0dcb38de4ef86ade">itsDrawY</link> = -6712345</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_classjevois_1_1GPUimage_1af4a5ced3e93c69749b1374329005c93c">itsDrawWidth</link> = 0</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_classjevois_1_1GPUimage_1a33390f866aafc8c3afcc88bf296c6323">itsDrawHeight</link> = 0</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_classjevois_1_1GPUimage_1a34d505b280042b5f315d45782df2890a">itsTextureWidth</link> = 0</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_classjevois_1_1GPUimage_1a95166b26042ab0333d40495e1f4c1956">itsTextureHeight</link> = 0</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_classjevois_1_1GPUimage_1a15079b33dc67fc0ffa9bf8f396c068d5">itsFormat</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_classjevois_1_1GPUimage_1a9d2addfe32b6ae8cb0f913248deed38a">itsGLtextureWidth</link> = 0</para>
</listitem>
            <listitem><para>GLenum <link linkend="_classjevois_1_1GPUimage_1a78d90434af688fdeea8fbdda5f5e7312">itsGLtextureFmt</link> = 0</para>
</listitem>
            <listitem><para>GLfloat <link linkend="_classjevois_1_1GPUimage_1acbd04ebcce5745cd9fda965978372417">itsTwirl</link> = 0</para>
</listitem>
            <listitem><para>GLfloat <link linkend="_classjevois_1_1GPUimage_1af157e6261eb019bc3cc87e37871fd9f6">itsAlpha</link> = 0</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classjevois_1_1GPUimage_1a2102fa86beca2c170b1212053c329ceb"/>    <section>
    <title>GPUimage()</title>
<indexterm><primary>GPUimage</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>GPUimage</secondary></indexterm>
<para><computeroutput>jevois::GPUimage::GPUimage ( )</computeroutput></para><para>

<para>Constructor. </para>
</para>
<para>
Definition at line 51 of file GPUimage.C.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a647d37928e862fa184c885ccc6fcbba6"/>    <section>
    <title>~GPUimage()</title>
<indexterm><primary>~GPUimage</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>~GPUimage</secondary></indexterm>
<para><computeroutput>jevois::GPUimage::~GPUimage ( )</computeroutput></para><para>

<para>Destructor. </para>
</para>
<para>
Definition at line 55 of file GPUimage.C.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classjevois_1_1GPUimage_1a9e893862f56fc8e9d8228ba06fbc6b0d"/>    <section>
    <title>d2i()</title>
<indexterm><primary>d2i</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>d2i</secondary></indexterm>
<para><computeroutput>ImVec2 jevois::GPUimage::d2i (ImVec2 const &amp; p)</computeroutput></para><para>

<para>Convert coordinates of a point from on-screen to within a rendered image. </para>
</para>

<para>Throws if <link linkend="_classjevois_1_1GPUimage_1aeb94b2ad8524f0ae4bb293377466fb29">draw()</link> has not been previously called. </para>
<para>
Definition at line 420 of file GPUimage.C.</para>
<para>
Referenced by jevois::GUIhelper::d2i().</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1ae1de47987ab623cc85bbc2e95f708096"/>    <section>
    <title>d2is()</title>
<indexterm><primary>d2is</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>d2is</secondary></indexterm>
<para><computeroutput>ImVec2 jevois::GPUimage::d2is (ImVec2 const &amp; p)</computeroutput></para><para>

<para>Convert a 2D size from on-screen to within a rendered image. </para>
</para>

<para>Throws if <link linkend="_classjevois_1_1GPUimage_1aeb94b2ad8524f0ae4bb293377466fb29">draw()</link> has not been previously called. </para>
<para>
Definition at line 427 of file GPUimage.C.</para>
<para>
Referenced by jevois::GUIhelper::d2is().</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1aeb94b2ad8524f0ae4bb293377466fb29"/>    <section>
    <title>draw()</title>
<indexterm><primary>draw</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>draw</secondary></indexterm>
<para><computeroutput>void jevois::GPUimage::draw (int &amp; x, int &amp; y, unsigned short &amp; w, unsigned short &amp; h, bool noalias, glm::mat4 const &amp; pvm)</computeroutput></para><para>

<para>Draw to OpenGL. </para>
</para>

<para>If w=0 or h=0 then the image will be rescaled to fill the display as much as possible without changing the aspect ratio, and the actually used x,y,w,h will be returned. Otherwise, x,y,w,h are not modified. Throws if <link linkend="_classjevois_1_1GPUimage_1a621cb94a4dec484e84710ae2c82d0215">set()</link> has not been previously called. If noalias is specified, the scaling factor will be rounded down to the nearest integer to prevent aliasing in the display. This may reduce the displayed image size. For example, with a 1920x1080 window, a 640x480 image would be letterboxed to 1440x1080 when noalias is false. But that is a scaling factor of 2.25 which may create rendering aliasing. When noalias is true, the letterboxed image size will be 1280x960 (scale factor of 2.0). The matrix pvm is the projection-view-model matrix to use for rendering. </para>
<para>
Definition at line 282 of file GPUimage.C.</para>
<para>
References jevois::applyLetterBox(), GL_CHECK, and h.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a52d8b84a7b85442b17448022ce116559"/>    <section>
    <title>i2d()</title>
<indexterm><primary>i2d</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>i2d</secondary></indexterm>
<para><computeroutput>ImVec2 jevois::GPUimage::i2d (ImVec2 const &amp; p)</computeroutput></para><para>

<para>Convert coordinates of a point from within a rendered image to on-screen. </para>
</para>

<para>Throws if <link linkend="_classjevois_1_1GPUimage_1aeb94b2ad8524f0ae4bb293377466fb29">draw()</link> has not been previously called. </para>
<para>
Definition at line 406 of file GPUimage.C.</para>
<para>
Referenced by jevois::GUIhelper::i2d().</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a30ec1434deda0fd6a78bdb0419114bed"/>    <section>
    <title>i2ds()</title>
<indexterm><primary>i2ds</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>i2ds</secondary></indexterm>
<para><computeroutput>ImVec2 jevois::GPUimage::i2ds (ImVec2 const &amp; p)</computeroutput></para><para>

<para>Convert a 2D size from within a rendered image to on-screen. </para>
</para>

<para>Throws if <link linkend="_classjevois_1_1GPUimage_1aeb94b2ad8524f0ae4bb293377466fb29">draw()</link> has not been previously called. </para>
<para>
Definition at line 413 of file GPUimage.C.</para>
<para>
Referenced by jevois::GUIhelper::i2ds().</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a6c2fc63472548c58c2b637fdf6fa5445"/>    <section>
    <title>set()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>set</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>set</secondary></indexterm>
<para><computeroutput>void jevois::GPUimage::set (cv::Mat const &amp; img, bool rgb)</computeroutput></para><para>

<para>Set pixel data from a vanilla OpenCV Mat, pixel data will be copied to texture. </para>
</para>

<para>If image had three or four 8-bit channels, interpret as RGB[A] if rgb is true, otherwise BGR[A]. If two 8-bit channels, interpret at YUYV. If one, interpret at GRAY. The caller must guarantee that the pixel data will not be de-allocated until after <link linkend="_classjevois_1_1GPUimage_1aeb94b2ad8524f0ae4bb293377466fb29">draw()</link> is called. </para>
<para>
Definition at line 162 of file GPUimage.C.</para>
<para>
References LFATAL.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a16607c4aa51636c4d8d7609c22bc18f2"/>    <section>
    <title>set()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>set</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>set</secondary></indexterm>
<para><computeroutput>void jevois::GPUimage::set (<link linkend="_classjevois_1_1InputFrame">jevois::InputFrame</link> const &amp; frame, EGLDisplay display)</computeroutput></para><para>

<para>Set pixel data from camera input frame, sharing data with camera kernel driver using zero-copy. </para>
</para>

<para>The caller must guarantee that the pixel data will not be de-allocated (e.g., by calling done() on the <link linkend="_classjevois_1_1InputFrame">InputFrame</link>) until after <link linkend="_classjevois_1_1GPUimage_1aeb94b2ad8524f0ae4bb293377466fb29">draw()</link> is called. Zero-copy requires DMABUF sharing between V4L2 and OpenGL-ES and is only available on JeVois-Pro platform. On other hardware configs, this falls back to set(RawImage) using the <link linkend="_classjevois_1_1RawImage">RawImage</link> from the <link linkend="_classjevois_1_1InputFrame">InputFrame</link>. </para>
<para>
Definition at line 180 of file GPUimage.C.</para>
<para>
References jevois::RawImage::buf, jevois::RawImage::fmt, jevois::InputFrame::get(), and jevois::RawImage::width.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a621cb94a4dec484e84710ae2c82d0215"/>    <section>
    <title>set()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>set</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>set</secondary></indexterm>
<para><computeroutput>void jevois::GPUimage::set (<link linkend="_classjevois_1_1RawImage">jevois::RawImage</link> const &amp; img)</computeroutput></para><para>

<para>Set pixel data from a vanilla <link linkend="_classjevois_1_1RawImage">RawImage</link>, pixel data will be copied to texture. </para>
</para>

<para>The caller must guarantee that the pixel data will not be de-allocated until after <link linkend="_classjevois_1_1GPUimage_1aeb94b2ad8524f0ae4bb293377466fb29">draw()</link> is called. </para>
<para>
Definition at line 156 of file GPUimage.C.</para>
<para>
References jevois::RawImage::buf, jevois::RawImage::fmt, jevois::RawImage::height, and jevois::RawImage::width.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1aa94afeb7f3fe3268588f1aae96307876"/>    <section>
    <title>set2()</title>
<indexterm><primary>set2</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>set2</secondary></indexterm>
<para><computeroutput>void jevois::GPUimage::set2 (<link linkend="_classjevois_1_1InputFrame">jevois::InputFrame</link> const &amp; frame, EGLDisplay display)</computeroutput></para><para>

<para>Set pixel data from camera input second (scaled) frame, sharing data with camera kernel driver using zero-copy. </para>
</para>

<para>The caller must guarantee that the pixel data will not be de-allocated (e.g., by calling done() on the <link linkend="_classjevois_1_1InputFrame">InputFrame</link>) until after <link linkend="_classjevois_1_1GPUimage_1aeb94b2ad8524f0ae4bb293377466fb29">draw()</link> is called. Zero-copy requires DMABUF sharing between V4L2 and OpenGL-ES and is only available on JeVois-Pro platform. On other hardware configs, this falls back to set(RawImage) using the <link linkend="_classjevois_1_1RawImage">RawImage</link> from the <link linkend="_classjevois_1_1InputFrame">InputFrame</link>. Throws unless we are JeVois-Pro Platform and the camera is set to CropScale mode. </para>
<para>
Definition at line 206 of file GPUimage.C.</para>
<para>
References jevois::RawImage::buf, jevois::RawImage::fmt, jevois::InputFrame::get2(), and jevois::RawImage::width.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1acecc5df142373733b1ff89e8aaf41c04"/>    <section>
    <title>setInternal()</title>
<indexterm><primary>setInternal</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>setInternal</secondary></indexterm>
<para><computeroutput>void jevois::GPUimage::setInternal (unsigned int width, unsigned int height, unsigned int fmt, unsigned char const * data)<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 62 of file GPUimage.C.</para>
<para>
References jevois::fccstr(), jevois::shader::frag_grey, jevois::shader::frag_grey_twirl, jevois::shader::frag_rgb, jevois::shader::frag_rgb_twirl, jevois::shader::frag_rgba, jevois::shader::frag_rgba_twirl, jevois::shader::frag_yuyv, jevois::shader::frag_yuyv_twirl, LDEBUG, LFATAL, and jevois::shader::vert.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a4479aad42978c70f1ab3f95c2d4a5ed7"/>    <section>
    <title>setWithDmaBuf()</title>
<indexterm><primary>setWithDmaBuf</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>setWithDmaBuf</secondary></indexterm>
<para><computeroutput>void jevois::GPUimage::setWithDmaBuf (<link linkend="_classjevois_1_1RawImage">jevois::RawImage</link> const &amp; img, int dmafd, EGLDisplay display)<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 232 of file GPUimage.C.</para>
<para>
References jevois::fccstr(), jevois::RawImage::fmt, jevois::shader::frag_oes, jevois::shader::frag_oes_twirl, jevois::RawImage::height, LDEBUG, LFATAL, jevois::shader::vert, and jevois::RawImage::width.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a64a9f6deafb9a00562dda09b83e6c433"/>    <section>
    <title>twirl()</title>
<indexterm><primary>twirl</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>twirl</secondary></indexterm>
<para><computeroutput>void jevois::GPUimage::twirl (float t, float alpha = <computeroutput>1.0F</computeroutput>
)</computeroutput></para><para>

<para>Optional twirl and alpha fading effect to the image, useful mostly for demos/transitions. </para>
</para>
<para>
Definition at line 434 of file GPUimage.C.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classjevois_1_1GPUimage_1af157e6261eb019bc3cc87e37871fd9f6"/>    <section>
    <title>itsAlpha</title>
<indexterm><primary>itsAlpha</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsAlpha</secondary></indexterm>
<para><computeroutput>GLfloat jevois::GPUimage::itsAlpha = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 123 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a2d9580d4e99494928ed80416d260a0a4"/>    <section>
    <title>itsDisplay</title>
<indexterm><primary>itsDisplay</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsDisplay</secondary></indexterm>
<para><computeroutput>EGLDisplay jevois::GPUimage::itsDisplay<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 105 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a33390f866aafc8c3afcc88bf296c6323"/>    <section>
    <title>itsDrawHeight</title>
<indexterm><primary>itsDrawHeight</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsDrawHeight</secondary></indexterm>
<para><computeroutput>unsigned int jevois::GPUimage::itsDrawHeight = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 117 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1af4a5ced3e93c69749b1374329005c93c"/>    <section>
    <title>itsDrawWidth</title>
<indexterm><primary>itsDrawWidth</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsDrawWidth</secondary></indexterm>
<para><computeroutput>unsigned int jevois::GPUimage::itsDrawWidth = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 117 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a96a074e4c0bcb68aea0bc4661899e15a"/>    <section>
    <title>itsDrawX</title>
<indexterm><primary>itsDrawX</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsDrawX</secondary></indexterm>
<para><computeroutput>int jevois::GPUimage::itsDrawX = -1234567<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 116 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1ad952cc3f7f8ceb6a0dcb38de4ef86ade"/>    <section>
    <title>itsDrawY</title>
<indexterm><primary>itsDrawY</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsDrawY</secondary></indexterm>
<para><computeroutput>int jevois::GPUimage::itsDrawY = -6712345<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 116 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a15079b33dc67fc0ffa9bf8f396c068d5"/>    <section>
    <title>itsFormat</title>
<indexterm><primary>itsFormat</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsFormat</secondary></indexterm>
<para><computeroutput>unsigned int jevois::GPUimage::itsFormat = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 119 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a78d90434af688fdeea8fbdda5f5e7312"/>    <section>
    <title>itsGLtextureFmt</title>
<indexterm><primary>itsGLtextureFmt</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsGLtextureFmt</secondary></indexterm>
<para><computeroutput>GLenum jevois::GPUimage::itsGLtextureFmt = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 121 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a9d2addfe32b6ae8cb0f913248deed38a"/>    <section>
    <title>itsGLtextureWidth</title>
<indexterm><primary>itsGLtextureWidth</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsGLtextureWidth</secondary></indexterm>
<para><computeroutput>int jevois::GPUimage::itsGLtextureWidth = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 120 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a99ca07de9ae1008d9d3b2e777389d893"/>    <section>
    <title>itsLocation</title>
<indexterm><primary>itsLocation</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsLocation</secondary></indexterm>
<para><computeroutput>GLuint jevois::GPUimage::itsLocation = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 112 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a3d0b15a0e29dd76afeba9022b80e2dfa"/>    <section>
    <title>itsProgram</title>
<indexterm><primary>itsProgram</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsProgram</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt;<link linkend="_classjevois_1_1GPUprogram">GPUprogram</link>&gt; jevois::GPUimage::itsProgram<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 107 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1acea58e770a2f94f454b77cb7d458ec73"/>    <section>
    <title>itsTexture</title>
<indexterm><primary>itsTexture</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsTexture</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt;<link linkend="_classjevois_1_1GPUtexture">GPUtexture</link>&gt; jevois::GPUimage::itsTexture<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 106 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a754a602a3ec47535b9a0c1f52cc37c84"/>    <section>
    <title>itsTextureDmaBuf</title>
<indexterm><primary>itsTextureDmaBuf</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsTextureDmaBuf</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt;<link linkend="_classjevois_1_1GPUtextureDmaBuf">GPUtextureDmaBuf</link>&gt; jevois::GPUimage::itsTextureDmaBuf<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 110 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a95166b26042ab0333d40495e1f4c1956"/>    <section>
    <title>itsTextureHeight</title>
<indexterm><primary>itsTextureHeight</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsTextureHeight</secondary></indexterm>
<para><computeroutput>unsigned int jevois::GPUimage::itsTextureHeight = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 118 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a34d505b280042b5f315d45782df2890a"/>    <section>
    <title>itsTextureWidth</title>
<indexterm><primary>itsTextureWidth</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsTextureWidth</secondary></indexterm>
<para><computeroutput>unsigned int jevois::GPUimage::itsTextureWidth = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 118 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1acbd04ebcce5745cd9fda965978372417"/>    <section>
    <title>itsTwirl</title>
<indexterm><primary>itsTwirl</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsTwirl</secondary></indexterm>
<para><computeroutput>GLfloat jevois::GPUimage::itsTwirl = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 122 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a43aef5488a5b44f85e503baadc2bab41"/>    <section>
    <title>itsVertexArray</title>
<indexterm><primary>itsVertexArray</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsVertexArray</secondary></indexterm>
<para><computeroutput>GLuint jevois::GPUimage::itsVertexArray = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 113 of file GPUimage.H.</para>
    </section><anchor xml:id="_classjevois_1_1GPUimage_1a04f14f563647d47aa6d9b7b8e317ca83"/>    <section>
    <title>itsVertexBuffers</title>
<indexterm><primary>itsVertexBuffers</primary><secondary>jevois::GPUimage</secondary></indexterm>
<indexterm><primary>jevois::GPUimage</primary><secondary>itsVertexBuffers</secondary></indexterm>
<para><computeroutput>GLuint jevois::GPUimage::itsVertexBuffers[2] = { }<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 114 of file GPUimage.H.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/jevois/GPU/<link linkend="_GPUimage_8H">GPUimage.H</link>src/jevois/GPU/<link linkend="_GPUimage_8C">GPUimage.C</link></section>
</section>
