<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classjevois_1_1dnn_1_1NetworkPython">
<title>jevois::dnn::NetworkPython Class Reference</title>
<indexterm><primary>jevois::dnn::NetworkPython</primary></indexterm>
<para>
<computeroutput>#include &lt;jevois/DNN/NetworkPython.H&gt;</computeroutput>
</para>
<section>
<title> </title>

<para>通过 python 调用的 DNN 神经网络的包装器 </para>
<para>
Definition at line 31 of file NetworkPython.H.</para>
Inheritance diagram for jevois::dnn::NetworkPython:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classjevois_1_1dnn_1_1NetworkPython__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for jevois::dnn::NetworkPython:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classjevois_1_1dnn_1_1NetworkPython__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classjevois_1_1dnn_1_1NetworkPython_1afa49f351452600d00f5797cfef47eb55">NetworkPython</link> (std::string const &amp;instance)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classjevois_1_1dnn_1_1NetworkPython_1a33ee9c1d634d990b081a7180fe7ff26c">~NetworkPython</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>void <link linkend="_classjevois_1_1dnn_1_1NetworkPython_1ae278bb994f487efa4634cda9954cd540">freeze</link> (bool doit) override</para>

<para>冻结/解冻参数，用户在运行时不应更改 </para>
</listitem>
            <listitem><para>std::vector&lt; vsi_nn_tensor_attr_t &gt; <link linkend="_classjevois_1_1dnn_1_1NetworkPython_1a94f56f4d22e117cab06a1fe626ba8ffe">inputShapes</link> () override</para>

<para>Get shapes of all input tensors. </para>
</listitem>
            <listitem><para>std::vector&lt; vsi_nn_tensor_attr_t &gt; <link linkend="_classjevois_1_1dnn_1_1NetworkPython_1acc2212571cfa68babaec3612fb2c80f8">outputShapes</link> () override</para>

<para>Get shapes of all output tensors. </para>
</listitem>
            <listitem><para>void <link linkend="_classjevois_1_1dnn_1_1NetworkPython_1a4f293d1210df3aac0fdafe1a7fb574a0">load</link> () override</para>

<para>Load from disk. </para>
</listitem>
            <listitem><para>std::vector&lt; cv::Mat &gt; <link linkend="_classjevois_1_1dnn_1_1NetworkPython_1a04c84253cef99f51a21a862e4ae04a8f">doprocess</link> (std::vector&lt; cv::Mat &gt; const &amp;blobs, std::vector&lt; std::string &gt; &amp;info) override</para>

<para>Process input blobs and obtain output blobs. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_classjevois_1_1dnn_1_1NetworkPython_1aaafca750819187a097d8b9d2f33c015c">onParamChange</link> (network::pynet const &amp;param, std::string const &amp;newval) override</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>std::shared_ptr&lt; <link linkend="_classjevois_1_1dnn_1_1NetworkPythonImpl">NetworkPythonImpl</link> &gt; <link linkend="_classjevois_1_1dnn_1_1NetworkPython_1acab11cf7bc025ec7a36f1aafd76d02d6">itsImpl</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Related Functions    </title>

<para>(Note that these are not member functions.) </para>
        <itemizedlist>
            <listitem><para><link linkend="_classjevois_1_1dnn_1_1NetworkPython_1a75b023323fe4c43c4122ed5bd00a35fb">JEVOIS_DECLARE_PARAMETER_WITH_CALLBACK</link> (pynet, std::string, &quot;Full path of the python network processor file. &quot; &quot;Name of class defined in the file must match the file name without &quot; &quot;the trailing &apos;.py&apos;&quot;, &quot;&quot;, ParamCateg)</para>

<para>Parameter. </para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classjevois_1_1dnn_1_1NetworkPython_1afa49f351452600d00f5797cfef47eb55"/>    <section>
    <title>NetworkPython()</title>
<indexterm><primary>NetworkPython</primary><secondary>jevois::dnn::NetworkPython</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkPython</primary><secondary>NetworkPython</secondary></indexterm>
<para><computeroutput>jevois::dnn::NetworkPython::NetworkPython (std::string const &amp; instance)</computeroutput></para><para>

<para>Constructor. </para>
</para>
<para>
Definition at line 86 of file NetworkPython.C.</para>
<para>
References itsImpl.</para>
    </section><anchor xml:id="_classjevois_1_1dnn_1_1NetworkPython_1a33ee9c1d634d990b081a7180fe7ff26c"/>    <section>
    <title>~NetworkPython()</title>
<indexterm><primary>~NetworkPython</primary><secondary>jevois::dnn::NetworkPython</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkPython</primary><secondary>~NetworkPython</secondary></indexterm>
<para><computeroutput>jevois::dnn::NetworkPython::~NetworkPython ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>
<para>
Definition at line 93 of file NetworkPython.C.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classjevois_1_1dnn_1_1NetworkPython_1a04c84253cef99f51a21a862e4ae04a8f"/>    <section>
    <title>doprocess()</title>
<indexterm><primary>doprocess</primary><secondary>jevois::dnn::NetworkPython</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkPython</primary><secondary>doprocess</secondary></indexterm>
<para><computeroutput>std::vector&lt; cv::Mat &gt; jevois::dnn::NetworkPython::doprocess (std::vector&lt; cv::Mat &gt; const &amp; blobs, std::vector&lt; std::string &gt; &amp; info)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Process input blobs and obtain output blobs. </para>
</para>
<para>
Implements <link linkend="_classjevois_1_1dnn_1_1Network_1a0715f8cd89af48245f39ed1bd00c0849">jevois::dnn::Network</link>.</para>
<para>
Definition at line 115 of file NetworkPython.C.</para>
    </section><anchor xml:id="_classjevois_1_1dnn_1_1NetworkPython_1ae278bb994f487efa4634cda9954cd540"/>    <section>
    <title>freeze()</title>
<indexterm><primary>freeze</primary><secondary>jevois::dnn::NetworkPython</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkPython</primary><secondary>freeze</secondary></indexterm>
<para><computeroutput>void jevois::dnn::NetworkPython::freeze (bool doit)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>冻结/解冻参数，用户在运行时不应更改 </para>
</para>
<para>
Reimplemented from <link linkend="_classjevois_1_1dnn_1_1Network_1af49aabe3e1317946de848f356970fa8d">jevois::dnn::Network</link>.</para>
<para>
Definition at line 97 of file NetworkPython.C.</para>
<para>
References jevois::dnn::Network::freeze().</para>
    </section><anchor xml:id="_classjevois_1_1dnn_1_1NetworkPython_1a94f56f4d22e117cab06a1fe626ba8ffe"/>    <section>
    <title>inputShapes()</title>
<indexterm><primary>inputShapes</primary><secondary>jevois::dnn::NetworkPython</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkPython</primary><secondary>inputShapes</secondary></indexterm>
<para><computeroutput>std::vector&lt; vsi_nn_tensor_attr_t &gt; jevois::dnn::NetworkPython::inputShapes ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Get shapes of all input tensors. </para>
</para>
<para>
Implements <link linkend="_classjevois_1_1dnn_1_1Network_1a5c4daabb6b084f87ce330f98159ebaa7">jevois::dnn::Network</link>.</para>
<para>
Definition at line 124 of file NetworkPython.C.</para>
<para>
References jevois::dnn::parseTensorSpecs().</para>
    </section><anchor xml:id="_classjevois_1_1dnn_1_1NetworkPython_1a4f293d1210df3aac0fdafe1a7fb574a0"/>    <section>
    <title>load()</title>
<indexterm><primary>load</primary><secondary>jevois::dnn::NetworkPython</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkPython</primary><secondary>load</secondary></indexterm>
<para><computeroutput>void jevois::dnn::NetworkPython::load ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Load from disk. </para>
</para>
<para>
Implements <link linkend="_classjevois_1_1dnn_1_1Network_1a2aff2f5a849ddd5ce91ae454bf9375ec">jevois::dnn::Network</link>.</para>
<para>
Definition at line 120 of file NetworkPython.C.</para>
    </section><anchor xml:id="_classjevois_1_1dnn_1_1NetworkPython_1aaafca750819187a097d8b9d2f33c015c"/>    <section>
    <title>onParamChange()</title>
<indexterm><primary>onParamChange</primary><secondary>jevois::dnn::NetworkPython</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkPython</primary><secondary>onParamChange</secondary></indexterm>
<para><computeroutput>void jevois::dnn::NetworkPython::onParamChange (network::pynet const &amp; param, std::string const &amp; newval)<computeroutput>[override]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 109 of file NetworkPython.C.</para>
    </section><anchor xml:id="_classjevois_1_1dnn_1_1NetworkPython_1acc2212571cfa68babaec3612fb2c80f8"/>    <section>
    <title>outputShapes()</title>
<indexterm><primary>outputShapes</primary><secondary>jevois::dnn::NetworkPython</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkPython</primary><secondary>outputShapes</secondary></indexterm>
<para><computeroutput>std::vector&lt; vsi_nn_tensor_attr_t &gt; jevois::dnn::NetworkPython::outputShapes ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Get shapes of all output tensors. </para>
</para>
<para>
Implements <link linkend="_classjevois_1_1dnn_1_1Network_1a98a8d50e49ba4d9f827ff9b5d4c8b68f">jevois::dnn::Network</link>.</para>
<para>
Definition at line 128 of file NetworkPython.C.</para>
<para>
References jevois::dnn::parseTensorSpecs().</para>
</section>
</section>
<section>
<title>Friends And Related Function Documentation</title>
<anchor xml:id="_classjevois_1_1dnn_1_1NetworkPython_1a75b023323fe4c43c4122ed5bd00a35fb"/>    <section>
    <title>JEVOIS_DECLARE_PARAMETER_WITH_CALLBACK()</title>
<indexterm><primary>JEVOIS_DECLARE_PARAMETER_WITH_CALLBACK</primary><secondary>jevois::dnn::NetworkPython</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkPython</primary><secondary>JEVOIS_DECLARE_PARAMETER_WITH_CALLBACK</secondary></indexterm>
<para><computeroutput>JEVOIS_DECLARE_PARAMETER_WITH_CALLBACK (pynet , std::string , &quot;Full path of the python network processor file. &quot; &quot;Name of class defined in the file must match the file name without &quot; &quot;the trailing &apos;.py&apos;&quot; , &quot;&quot; , ParamCateg )<computeroutput>[related]</computeroutput></computeroutput></para><para>

<para>Parameter. </para>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classjevois_1_1dnn_1_1NetworkPython_1acab11cf7bc025ec7a36f1aafd76d02d6"/>    <section>
    <title>itsImpl</title>
<indexterm><primary>itsImpl</primary><secondary>jevois::dnn::NetworkPython</secondary></indexterm>
<indexterm><primary>jevois::dnn::NetworkPython</primary><secondary>itsImpl</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt;<link linkend="_classjevois_1_1dnn_1_1NetworkPythonImpl">NetworkPythonImpl</link>&gt; jevois::dnn::NetworkPython::itsImpl<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 62 of file NetworkPython.H.</para>
<para>
Referenced by NetworkPython().</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/jevois/DNN/<link linkend="_NetworkPython_8H">NetworkPython.H</link>include/jevois/DNN/<link linkend="_Network_8H">Network.H</link>src/jevois/DNN/<link linkend="_NetworkPython_8C">NetworkPython.C</link></section>
</section>
