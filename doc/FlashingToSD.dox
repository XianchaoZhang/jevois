/*! \page FlashingToSD Flashing to microSD card

Because \jvpro runs a full Ubuntu operating system, with Debian package manager, re-flashing the microSD should be
very rate and only if you have corrupted it badly.

On \jva33, re-flashing is more common as it is the only way to update core software, since the \jva33 operating system
is barebones and does not have a package manager.

Procedure for JeVois-Pro
========================

- If you just need to install packages, for example customized versions of \b jevois and \b jevoisbase, follow the
  instructions towards the end of \ref CompilingJeVois and \ref CompilingJeVoisBase

- If your microSD is badly corrupt, either download a microSD image from http://jevois.org/start/software.html or build
  one from source as described in \ref ProgrammerSource (last section).

- Then proceed as described in \ref NewMicroSD

Procedure for JeVois-A33
========================

When you run `./rebuild-platform.sh` in \b jevois and `./rebuild-platform.sh --staging` in \b jevoisbase, compiled files
get installed into the staging area (see \ref ProgrammerOrganization).

The last step to run them on the JeVois smart camera is to flash the whole Linux OS, kernel, JeVois framework (including
\c jevois-daemon), and jevoisbase modules to microSD.

To do this, run

\verbatim
jevois-flash-card
\endverbatim

and answer the questions interactively.

\c jevois-flash-card is instaled in <b>/usr/bin/</b> when you install the JeVois Ubuntu packages or when you run \c
jevois-build.sh to rebuild the entire buildroot from source. Its source is in
<b>jevois-sdk/jevois-build/jevois-flash-card</b>.

Once you have done this a few times and you are confident that you know what you are doing, you can instruct \c
jevois-flash-card to not ask any questions. Just be absolutely certain that you are using the right device for your SD
card, so that you do not destroy your main hard drive because of a small typo:

\verbatim
jevois-flash-card -y /dev/sdX
\endverbatim

where you replace \b /dev/sdX by the device that gets assigned to your microSD card. On some laptops, the device is
called \b /dev/mmcblkX instead.

\note If you do a lot of development that requires re-flashing (e.g., developing kernel code for JeVois), it may be
worth investing in a super-fast microSD card. While it can take about 5 minutes to run jevois-flash-card with a regular
class 10 microSD card, we have been able to get this time down to less than 40 seconds using 1800x, 1900x, or V30, V60,
or V90, UHS-II microSD cards.

Re-flashing after some code update - full recompilation
-------------------------------------------------------

\verbatim
cd ~/jevois && ./rebuild-platform.sh
cd ~/jevoisbase && ./rebuild-platform.sh --staging
cd ~/mymodule && ./rebuild-platform.sh --staging     # optional: for your own modules
jevois-flash-card -y /dev/sdX
\endverbatim

Re-flashing after some code update - partial recompilation
----------------------------------------------------------

\verbatim
cd ~/jevois/pbuild && make -j
cd ~/jevoisbase/pbuild && make -j
cd ~/mymodule && make -j     # optional: for your own modules
jevois-flash-card -y /dev/sdX
\endverbatim

Pulling the latest from github and re-flashing - full recompilation
-------------------------------------------------------------------

\verbatim
cd ~/jevois && git pull && ./rebuild-platform.sh
cd ~/jevoisbase && git pull && ./rebuild-platform.sh --staging
cd ~/mymodule && ./rebuild-platform.sh --staging     # optional: for your own modules
jevois-flash-card -y /dev/sdX
\endverbatim

Pulling the latest from github and re-flashing - partial recompilation
----------------------------------------------------------------------

\verbatim
cd ~/jevois && git pull && cd pbuild && make -j
cd ~/jevoisbase && git pull && cd pbuild && maje -j
cd ~/mymodule/pbuild && make -j     # optional: for your own modules
jevois-flash-card -y /dev/sdX
\endverbatim

Updating a module directly to live microSD inside JeVois - full recompilation
-----------------------------------------------------------------------------

With \jvversion{1.3} or later, you can directly install your new modules to the microSD card inside JeVois, without
having to eject the card and connect it to your host computer.

The JeVois smart camera should be connected to your host computer, booted up, and not streaming video.

\verbatim
cd ~/mymodule && ./rebuild-platform.sh --live
\endverbatim

\note This internally just uses `jevois-usbsd start` to tell JeVois to export its microSD as a virtual flash drive, then
copies the module files, and finally issues a `jevois-usbsd stop` to eject the virtual flash drive and reboot
JeVois. This assumes that the JeVois microSD will appear on your host as <b>/media/<em>username</em>/JEVOIS/</b> where
<em>username</em> is your Linux user name. You may want to confirm this by just typing `jevois-usbsd start` and then
checking in /media where the virtual flash drive appeared.

\note Once you select a destination in `./rebuild-platform.sh` (none, staging, or microsd), that will remain for
subsequent `make install` commands, until you change it by re-running `./rebuild-platform.sh` with another destination.


Updating a module directly to live microSD inside JeVois - partial recompilation
--------------------------------------------------------------------------------

You must have done at least one `./rebuild-platform.sh --live` which sets the live microSD inside JeVois as install
target.

Make sure JeVois is connected, booted up, and not streaming video.

\verbatim
cd ~/mymodule/pbuild && make -j && sudo make install
\endverbatim

\note Once you select a destination in `./rebuild-platform.sh` (none, staging, or microsd), that will remain for
subsequent `make install` commands, until you change it by re-running `./rebuild-platform.sh` with another destination.

Updating a module directly to microSD inserted into host - full recompilation
-----------------------------------------------------------------------------

The microSD should either inserted into your host using some microSD flash reader, or already exported by JeVois using
the \c usbsd command in the JeVois command-line interface (see \ref CompilingJeVoisBase and \ref UserCli), or the
`jevois-usbsd start` command from any Linux terminal on your host.

It must be mounted and available under <b>/media/<em>username</em>/JEVOIS/</b> where <em>username</em> is your Linux
user name.

\verbatim
cd ~/mymodule && ./rebuild-platform.sh --microsd
\endverbatim

\note Once you select a destination in `./rebuild-platform.sh` (none, staging, or microsd), that will remain for
subsequent `make install` commands, until you change it by re-running `./rebuild-platform.sh` with another destination.


Updating a module directly to microSD inserted into host - partial recompilation
--------------------------------------------------------------------------------

The microSD should either inserted into your host using some microSD flash reader, or already exported by JeVois using
the \c usbsd command in the JeVois command-line interface (see \ref CompilingJeVoisBase and \ref UserCli), or the
`jevois-usbsd start` command from any Linux terminal on your host.

It must be mounted and available under <b>/media/<em>username</em>/JEVOIS/</b> where <em>username</em> is your Linux
user name.

You must have done at least one `./rebuild-platform.sh --microsd` which sets the mounted microSD as install target.

\verbatim
cd ~/mymodule/pbuild && make -j && sudo make install
\endverbatim

\note Once you select a destination in `./rebuild-platform.sh` (none, staging, or microsd), that will remain for
subsequent `make install` commands, until you change it by re-running `./rebuild-platform.sh` with another destination.


*/
